name: Release - Build and Publish Docker Image

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    name: Build and Test Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: test-image:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run container smoke tests
        run: |
          # Start container
          docker run -d -p 8000:8000 --name test-container test-image:latest
          
          # Wait for container to be ready
          echo "Waiting for container to be ready..."
          sleep 10
          
          # Test health endpoint
          echo "Testing /health endpoint..."
          curl -f http://localhost:8000/health || exit 1
          
          # Test root endpoint
          echo "Testing / endpoint..."
          curl -f http://localhost:8000/ || exit 1
          
          # Test predict endpoint
          echo "Testing /predict endpoint..."
          curl -f -X POST http://localhost:8000/predict \
            -H "Content-Type: application/json" \
            -d '{"age": 0.02, "sex": -0.044, "bmi": 0.06, "bp": -0.03, "s1": -0.02, "s2": 0.03, "s3": -0.02, "s4": 0.02, "s5": 0.02, "s6": -0.001}' || exit 1
          
          # Check logs
          echo "Container logs:"
          docker logs test-container
          
          # Stop container
          docker stop test-container
          docker rm test-container
          
          echo "All smoke tests passed!"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metrics from image
        run: |
          # Run container and extract metrics
          docker run --rm test-image:latest cat /app/models/metrics.json > metrics.json
          echo "Model Metrics:"
          cat metrics.json

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.version.outputs.TAG }}
          body: |
            ## Diabetes Progression Prediction Model - ${{ steps.version.outputs.TAG }}
            
            ### Docker Image
            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
            docker run -p 8000:8000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
            ```
            
            ### Model Metrics
            ```json
            $(cat metrics.json)
            ```
            
            ### API Usage
            
            **Health Check:**
            ```bash
            curl http://localhost:8000/health
            ```
            
            **Make Prediction:**
            ```bash
            curl -X POST http://localhost:8000/predict \
              -H "Content-Type: application/json" \
              -d '{"age": 0.02, "sex": -0.044, "bmi": 0.06, "bp": -0.03, "s1": -0.02, "s2": 0.03, "s3": -0.02, "s4": 0.02, "s5": 0.02, "s6": -0.001}'
            ```
            
            See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          files: |
            metrics.json
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


